{"version":3,"sources":["components/imagesApi/imagesApi.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","exportObject","fetchHits","a","searchQuery","currentPage","get","then","response","data","hits","Searchbar","onChangeQuery","useState","query","setQuery","handleSubmit","element","preventDefault","length","className","onSubmit","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","ImageGallery","children","ImageGalleryItem","alt","src","url","onClick","Button","this","props","onfetchHits","Component","modalRoot","document","querySelector","Modal","onClose","handleKeydown","e","code","useEffect","window","addEventListener","removeEventListener","createPortal","target","App","setHits","setCurrentPage","currentPageImages","setCurrentPageImages","setSearchQuery","isLoading","setIsLoading","error","setError","showModal","setShowModal","modalUrl","setModalUrl","modalAlt","setModalAlt","toggleModal","options","imagesApi","prevHits","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","onClickImageGalleryItem","getAttribute","map","id","tags","webformatURL","largeImageURL","style","textAlign","color","height","width","timeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.003e78e9.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst KEY = '21803950-62f4c86011510fd15fe85c0d2';\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\nconst fetchHits = async ({ searchQuery = '', currentPage = 1 }) => {\r\n  return axios\r\n    .get(\r\n      `?q=${searchQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\nconst exportObject = { fetchHits };\r\nexport default exportObject;\r\n","    import {useState} from 'react';\r\n    export default function Searchbar({onChangeQuery}){\r\n        const [query, setQuery] = useState('');\r\n        const handleChange = element => {\r\n                setQuery(element.currentTarget.value)\r\n            };\r\n        const handleSubmit=element=>{\r\n            element.preventDefault();\r\n                if (query.length !== 0) {\r\n                    onChangeQuery(query)     \r\n                } \r\n            }\r\n          return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n                    <button type=\"submit\" onSubmit={handleSubmit} className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        value={query}\r\n                        onChange={handleChange}\r\n                    />\r\n                 </form>\r\n            </header>\r\n            );\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // old code\r\n    // class Searchbar extends Component{ \r\n    // state = { query: '' };\r\n\r\n    // handleChange = element => {\r\n    //     this.setState({ query: element.currentTarget.value, })\r\n    // };\r\n    // handleSubmit=element=>{\r\n    // element.preventDefault();\r\n    //     if (this.state.query.length !== 0) {\r\n    //         this.props.onChangeQuery(this.state.query)     \r\n    //     } \r\n    // }\r\n//     render(){\r\n//         return (\r\n//     <header className=\"Searchbar\">\r\n//         <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n//             <button type=\"submit\" onSubmit={this.handleSubmit} className=\"SearchForm-button\">\r\n//                 <span className=\"SearchForm-button-label\">Search</span>\r\n//             </button>\r\n//             <input\r\n//                 className=\"SearchForm-input\"\r\n//                 type=\"text\"\r\n//                 autoComplete=\"off\"\r\n//                 autoFocus\r\n//                 placeholder=\"Search images and photos\"\r\n//                 value={this.state.query}\r\n//                 onChange={this.handleChange}\r\n//             />\r\n//          </form>\r\n//     </header>\r\n//     );\r\n//   }\r\n// }\r\n// export default Searchbar;","import React from 'react';\r\nconst ImageGallery = ({ children }) => (\r\n  <ul className=\"ImageGallery\">{children}</ul>\r\n);\r\nexport default ImageGallery;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst ImageGalleryItem = ({ alt, src, url, onClick }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img\r\n      className=\"ImageGalleryItem-image\"\r\n      onClick={onClick}\r\n      src={src}\r\n      alt={alt}\r\n      url={url}\r\n    />\r\n  </li>\r\n);\r\nImageGalleryItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from 'react';\r\nclass Button extends Component {\r\n    render() {\r\n    return(\r\n        <button type=\"button\" className=\"Button\" onClick={this.props.onfetchHits} >\r\n            Load more\r\n        </button>\r\n    )}\r\n};\r\nexport default Button;","import {useEffect} from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\nexport default function Modal({ onClose, src, alt }) {\r\n const handleKeydown = e => {\r\n        if (e.code === 'Escape') {\r\n            onClose();\r\n        }\r\n    };\r\n    const handleBackdropClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            onClose();\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeydown);\r\n\r\n        return () => window.removeEventListener('keydown', handleKeydown)\r\n     })\r\n       return createPortal(\r\n            <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n                <div className=\"Modal\">\r\n                    <img src={src} alt={alt} />\r\n                </div>\r\n            </div>, \r\n            modalRoot,\r\n        );\r\n    \r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// old code\r\n\r\n// class Modal extends Component {\r\n//     componentDidMount() {\r\n//         window.addEventListener('keydown', this.handleKeyDown);\r\n//     }\r\n//     componentWillUnmount() {\r\n//         window.removeEventListener('keydown', this.handleKeyDown)\r\n//     }\r\n   \r\n   \r\n        // const { src, alt } = this.props;\r\n// export default Modal;","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from 'react';\nimport imagesApi from './components/imagesApi/imagesApi';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport ImageGalleryItem from './components/ImageGalleryItem/ImageGalleryItem'\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport Loader from 'react-loader-spinner';\nimport './styles.css';\n\nexport default function App() {\n  const [hits, setHits]=useState([]);\n  const [currentPage, setCurrentPage]=useState(1);\n  const [currentPageImages, setCurrentPageImages]=useState([]);\n  const [searchQuery, setSearchQuery]=useState('');\n  const [isLoading, setIsLoading]=useState(false);\n  const [error, setError]=useState(null);\n  const [showModal, setShowModal]=useState(false); \n  const [modalUrl, setModalUrl]=useState('');\n  const [modalAlt, setModalAlt]=useState('');\n\n  useEffect(()=>{\n    if (!searchQuery) {\n      return;\n      }\n    fetchHits();\n  },[searchQuery]);\n  const onChangeQuery = searchQuery => {\n    setSearchQuery(searchQuery);\n    setCurrentPage(1);\n    setHits([]);\n    setError(null)\n  }\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  const fetchHits = () => {\n    const options = { searchQuery, currentPage };\n    setIsLoading(true);\n    imagesApi\n    .fetchHits(options)\n    .then(hits => {\n      setHits(prevHits => [...prevHits, ...hits]);\n      setCurrentPage(currentPage=>currentPage + 1);\n      setCurrentPageImages([...hits])\n        if (hits.length === 0) {\n          setError('Nothing was find by your query. Try again.');\n      };\n      })\n      .then(() => {\n                window.scrollTo({\n                  top: document.documentElement.scrollHeight,\n                  behavior: 'smooth',\n                })\n              })\n    .catch(error => setError(error))\n    .finally(() => setIsLoading(false));\n  };\n  const onClickImageGalleryItem = e => {\n    setModalUrl(e.currentTarget.getAttribute('url'));\n    setModalAlt(e.currentTarget.getAttribute('alt'));\n    toggleModal();\n  };\n  const shouldRenderLoadMoreButton = () => {\n    const should = !(currentPageImages.length < 12) && !isLoading;\n    return should;\n    } \n    return (\n      <>\n        <Searchbar onChangeQuery={onChangeQuery} />\n        {error && (\n          <p >\n           {error}\n          </p>\n        )}\n        <ImageGallery>\n          {hits.map(({ id, tags, webformatURL, largeImageURL }) => (\n            <ImageGalleryItem key={id} alt={tags} src={webformatURL} url={largeImageURL} onClick={onClickImageGalleryItem} />\n          ))}\n        </ImageGallery>\n        {isLoading && \n        <Loader \n        style={{textAlign: 'center'}}\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000} //3 secs \n        /> }     \n        {shouldRenderLoadMoreButton() && <Button  onfetchHits={fetchHits}/> }\n        {showModal && (\n          <Modal src={modalUrl} alt={modalAlt} onClose={toggleModal} />\n        )}  \n      </>      \n    )    \n   }   \n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// old code\n// class App extends Component {\n//   state = {\n//     hits: [],\n//     currentPage: 1,\n//     currentPageImages: [],\n//     searchQuery: '',\n//     isLoading: false,\n//     error: null,\n//     largeImage: '',\n//     showModal: false,\n//     modalUrl: '',\n//     modalAlt: '',\n//   };\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.searchQuery !== this.state.searchQuery) {\n//       this.fetchHits();\n//     }\n//   } \n//   onChangeQuery = searchQuery => {\n//     this.setState({ \n//       searchQuery: searchQuery, \n//       currentPage: 1, \n//       hits: [], \n//       error: null, \n//     })\n//   }\n//   toggleModal = () => {\n//     this.setState(({ showModal }) => ({\n//       showModal: !showModal,\n//     }))\n//   }\n//   fetchHits = () => {\n//     const { searchQuery, currentPage } = this.state;\n//     const options = { searchQuery, currentPage };\n//     this.setState({ isLoading: true });\n//     imagesApi\n//     .fetchHits(options)\n//     .then(hits => {\n//       this.setState( prevState => ({\n//         hits: [...prevState.hits, ...hits], \n//         currentPage: prevState.currentPage + 1,\n//         currentPageImages: [...hits], \n//       }));\n//       if (hits.length === 0) {\n//           this.setState({\n//             error: 'Nothing was find by your query. Try again.',});\n//       }})\n//       .then(() => {\n//                 window.scrollTo({\n//                   top: document.documentElement.scrollHeight,\n//                   behavior: 'smooth',\n//                 })\n//               })\n//     .catch(error => this.setState({ error }))\n//     .finally(() => this.setState({ isLoading: false }));\n//   };\n//   onClickImageGalleryItem = e => {\n//     this.setState({\n//       modalUrl: e.currentTarget.getAttribute('url'),\n//       modalAlt: e.currentTarget.getAttribute('alt'),\n//     });\n//     this.toggleModal();\n//   };\n//   render() {\n//     const { hits, currentPageImages, isLoading, error, showModal, modalAlt, modalUrl } = this.state;\n//     const shouldRenderLoadMoreButton = !(currentPageImages.length < 12) && !isLoading;\n//     return (\n//       <>\n//         <Searchbar onChangeQuery={this.onChangeQuery} />\n//         {error && (\n//           <p >\n//            {error}\n//           </p>\n//         )}\n//         <ImageGallery>\n//           {hits.map(({ id, tags, webformatURL, largeImageURL }) => (\n//             <ImageGalleryItem key={id} alt={tags} src={webformatURL} url={largeImageURL} onClick={this.onClickImageGalleryItem} />\n//           ))}\n//         </ImageGallery>\n\n//         {isLoading && \n       \n//         <Loader \n//         style={{textAlign: 'center'}}\n//         type=\"Puff\"\n//         color=\"#00BFFF\"\n//         height={100}\n//         width={100}\n//         timeout={3000} //3 secs \n//         /> }     \n                    \n//         {shouldRenderLoadMoreButton && <Button  onfetchHits={this.fetchHits}/> }\n\n//         {showModal && (\n//           <Modal src={modalUrl} alt={modalAlt} onClose={this.toggleModal} />\n//         )}  \n//       </>      \n//     )    \n//   }   \n// };\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}